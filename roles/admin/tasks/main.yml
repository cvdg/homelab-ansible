---
- name: Install required packages
  ansible.builtin.apt:
    name: '{{ admin_packages }}'
    state: present
#
# Thanks: https://azouhr.wordpress.com/2018/07/03/port-forwarding-with-systemd/
#
- name: Create http.socket
  ansible.builtin.template:
    src: systemd-proxyd/http.socket.j2
    dest: /etc/systemd/system/http.socket
    owner: root
    group: root
    mode: '0644'

- name: Create http.service
  ansible.builtin.template:
    src: systemd-proxyd/http.service.j2
    dest: /etc/systemd/system/http.service
    owner: root
    group: root
    mode: '0644'

- name: Create https.socket
  ansible.builtin.template:
    src: systemd-proxyd/https.socket.j2
    dest: /etc/systemd/system/https.socket
    owner: root
    group: root
    mode: '0644'

- name: Create https.service
  ansible.builtin.template:
    src: systemd-proxyd/https.service.j2
    dest: /etc/systemd/system/https.service
    owner: root
    group: root
    mode: '0644'

- name: Start http.socket
  ansible.builtin.systemd:
    name: http.service
    state: started
    enabled: true
    daemon-reload: true

- name: Start http.service
  ansible.builtin.systemd:
    name: http.service
    state: started
    enabled: true
    daemon-reload: true

- name: Start https.socket
  ansible.builtin.systemd:
    name: https.service
    state: started
    enabled: true
    daemon-reload: true

- name: Start https.service
  ansible.builtin.systemd:
    name: https.service
    state: started
    enabled: true
    daemon-reload: true

# - name: Get info admin_user
#   ansible.builtin.getent:
#     database: passwd
#     key: '{{ admin_user }}'
#
# - name: Getent
#   ansible.builtin.debug:
#     var: ansible_facts.getent_passwd
#
# - name: UID
#   ansible.builtin.debug:
#     var: '/run/user/{{ ansible_facts.getent_passwd[admin_user][1] }}'
#
#
# Create podman.socket for admin_user
#
# FIXME This does not work ;-(
#
# - name: User podman.socket
#   ansible.builtin.systemd:
#     name: podman.socket
#     scope: user
#     state: started
#     enabled: true
#     daemon_reload: true
#   become: true
#   become_user: "{{ admin_user }}"
#   become_method: machinectl
#   environment:
#     XDG_RUNTIME_DIR: '/run/user/{{ ansible_facts.getent_passwd[admin_user][1] }}'

#
# traefik
#
- name: Create traefik directory
  ansible.builtin.file:
    path: /opt/traefik
    owner: '{{ admin_user }}'
    group: '{{ admin_group }}'
    state: directory
    mode: '0755'

- name: Create traefik/letsencrypt directory
  ansible.builtin.file:
    path: /opt/traefik/letsencrypt
    owner: '{{ admin_user }}'
    group: '{{ admin_group }}'
    state: directory
    mode: '0700'

- name: Create traefik/run.sh
  ansible.builtin.template:
    src: traefik/run.sh.j2
    dest: /opt/traefik/compose.yml
    owner: '{{ admin_user }}'
    group: '{{ admin_group }}'
    mode: '0755'

#
# portainer
#
- name: Create portainer directory
  ansible.builtin.file:
    path: /opt/portainer
    owner: '{{ admin_user }}'
    group: '{{ admin_group }}'
    state: directory
    mode: '0755'

- name: Create portainer/data directory
  ansible.builtin.file:
    path: /opt/portainer/data
    owner: '{{ admin_user }}'
    group: '{{ admin_group }}'
    state: directory
    mode: '0755'

- name: Create portainer/run.sh
  ansible.builtin.template:
    src: portainer/run.sh.j2
    dest: /opt/portainer/run.sh
    owner: '{{ admin_user }}'
    group: '{{ admin_group }}'
    mode: '0755'
